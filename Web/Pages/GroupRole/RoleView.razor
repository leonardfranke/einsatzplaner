@using BlazorBootstrap
@using Web.Extensions
@using Web.Models
@inherits RoleViewBase

@if(IsViewLoading)
{
    <div class="text-center">
        <div class="spinner-border m-5"></div>
    </div>
    return;
}

<h3>Rollen:</h3>

@foreach (var role in Roles)
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr @onmouseenter="() => HoveredId = role.Id" @onmouseleave="() => HoveredId = null">
                    <th scope="col">@GetRoleHeader(role)</th>
                    <th>Sperrzeitraum: @role.LockingPeriod Tage</th>
                    <th>
                        <button style="visibility:  @(HoveredId == role.Id ? "visible" : "hidden")"
                        type="button" @onclick="() => EditOrCreateRole(role)"
                        class="btn btn-outline-dark">
                            <i class="bi bi-pencil"></i>
                        </button>
                        @if(role.IsFree == false)
                        {
                            <Button hidden="@(HoveredId != role.Id)" @onclick="() => EditRoleMembers(role)" Color="ButtonColor.Dark" Outline="true"><Icon Name="IconName.Person" /></Button> 
                        }
                        <Button hidden="@(HoveredId != role.Id)" @onclick="() => EditOrCreateQualification(role, null)" Color="ButtonColor.Dark" Outline="true"><Icon Name="IconName.Pass" /></Button>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var member in role.MemberIds)
                {
                    <tr @onmouseenter="() => HoveredId = member" @onmouseleave="() => HoveredId = null">
                        <td>
                            @GetMemberNameById(member)
                        </td>
                        <td></td>
                        <td></td>
                    </tr>
                }
                @foreach(var qualification in GetQualificationsOfRole(role.Id))
                {
                    <tr>
                        <td colspan="4">
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr @onmouseenter="() => HoveredId = qualification.Id" @onmouseleave="() => HoveredId = null">
                                            <th>@qualification.Name</th>
                                            <th>
                                                <div hidden ="@(HoveredId != qualification.Id)">
                                                    <Button @onclick="() => EditOrCreateQualification(role, qualification)" Color="ButtonColor.Dark" Outline="true"><Icon Name="IconName.Pencil" /></Button>
                                                    <Button @onclick="() => EditQualificationMembers(qualification)" Color="ButtonColor.Dark" Outline="true"><Icon Name="IconName.Person" /></Button>
                                                </div>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var member in qualification.MemberIds)
                                        {
                                            <tr>
                                                <td>
                                                    @GetMemberNameById(member)
                                                </td>
                                                <td></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </td>
                    </tr>
                }                
            </tbody>
        </table>
    </div>
}

<br />
<button class="btn btn-primary" @onclick="() => EditOrCreateRole(null)">Rolle hinzufügen</button>

<div class="my-5" />

<h3>Bedarfsgruppen:</h3>
@if (RequirementGroups?.Count > 0)
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Bedarf</th>
                    <th scope="col" />
                </tr>
            </thead>
            <tbody>
                @foreach (var (group, index) in RequirementGroups.Select((group, index) => (group, index)))
                {
                    <tr @onmouseenter="() => HoveredId = group.Id" @onmouseleave="() => HoveredId = null">
                        <td>
                            @group.GetRequirementGroupDisplayText(Roles, Qualifications)
                        </td>
                        <td>
                            <button @onclick="() => EditOrCreateRequirementGroup(group)"
                                    class="btn btn-outline-dark"
                                    style="visibility: @(HoveredId == group.Id ? "visible" : "hidden")">
                                <i class="bi bi-pencil"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<br/>
<button class="btn btn-primary" @onclick="() => EditOrCreateRequirementGroup(null)">Bedarfsgruppe hinzufügen</button>

<div class="mb-5"/>