# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Test and deploy everything
on: workflow_dispatch

jobs:
  tests_frontend:
    runs-on: ubuntu-latest
    env:
      FIREBASE_AUTH_EMULATOR_HOST: '127.0.0.1:9099'
      FIRESTORE_EMULATOR_HOST: '127.0.0.1:9199'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      
      - name: Install firebase
        run: npm install -g firebase-tools

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Restore dotnet dependencies
        run: dotnet restore

      - name: Build dotnet projects
        run: dotnet build --no-restore

      - name: Install playwright browsers
        run: pwsh bin/Debug/net8.0/playwright.ps1 install
        working-directory: TestWebsite

      - name: Run api, website and tests
        run: |
          dotnet run --no-build --no-restore --project Api &
          dotnet run --no-build --no-restore --project Web &
          cd TestWebsite
          firebase emulators:exec "dotnet test --no-build --no-restore" --config "./emulator_firebase/firebase.json" --project emulator --import "./emulator_firebase/Export/"

  tests_optimizer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4      

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: Optimizer
          
      - run: |
          python -m unittest
        working-directory: Optimizer

  deploy_optimizer:
    runs-on: ubuntu-latest
    needs: [tests_frontend, tests_optimizer]
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v4

      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_SERVICE_ACCOUNT_EINSATZPLANER }}'
      - uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: optimizer
          region: europe-west1
          source: Optimizer
          flags: '--allow-unauthenticated --function=optimize --base-image==python312'
            

  deploy_backend:   
    runs-on: ubuntu-latest
    needs: [tests_frontend, tests_optimizer]
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v4

      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_SERVICE_ACCOUNT_EINSATZPLANER }}'

      - uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: einsatzplaner
          region: europe-west1
          source: Api
          flags: '--allow-unauthenticated'

  deploy_frontend:
    runs-on: ubuntu-latest
    needs: [tests_frontend, tests_optimizer]
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      - name: Restore dependencies
        run: dotnet restore

      - name: Replace base path
        run: |
          sed -i 's|<base href=".*"|<base href="${{vars.BASE_PATH}}"|' 'Web/wwwroot/index.html'

      - name: Replace backend address
        run: |
          sed -i 's|"BACKEND_ADDRESS": ".*"|"BACKEND_ADDRESS": "${{vars.BACKEND_ADDRESS}}"|' 'Web/wwwroot/appsettings.json'

      - name: Publish 
        run: dotnet publish Web/Web.csproj -c Release -o Web/out --no-restore
      
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_EINSATZPLANER }}
          channelId: live
          projectId: einsatzplaner
